services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./volume/redis_data:/data
    networks:
      - app_network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./volume/mongo_data:/data/db
    networks:
      - app_network

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: developer
      MYSQL_DATABASE: 
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    volumes:
      - ./volume/mysql_data:/var/lib/mysql:rw
    networks:
      - app_network
    user: mysql
  jupyter:
    image: jupyter/base-notebook:latest
    ports:
      - "8888:8888"
    volumes:
      - ./volume/jupyter_data:/home/jovyan/work
    networks:
      - app_network
    environment:
      JUPYTER_TOKEN: developer
  ngrok3000:
    image: ngrok/ngrok:latest
    container_name: ngrok
    restart: unless-stopped
    volumes:
      - ./ngrok-config:/home/ngrok/.config/ngrok
    command: http host.docker.internal:3000
    networks:
      - app_network
    environment:
      - NGROK_AUTHTOKEN=
    ports:
      - "4040:4040" # optional, for web interface
  
  minio:
      image: minio/minio:latest
      container_name: minio
      ports:
        - "9000:9000"  # akses S3 API
        - "9001:9001"  # akses dashboard
      volumes:
        - minio-data:/data
      environment:
        MINIO_ROOT_USER: minioadmin      # ganti dengan user sesuai kebutuhan
        MINIO_ROOT_PASSWORD: minioadmin  # ganti dengan password yang kuat
      command: server --console-address ":9001" /data
      restart: always
      networks:
        - app_network
volumes:
  redis_data:
  mongo_data:
  mysql_data:
  jupyter_data:
  minio-data:
networks:
  app_network: